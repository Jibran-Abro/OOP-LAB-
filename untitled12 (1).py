# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-SIjFw21y7flUJNk3O-rwdmg03VkQDxK
"""

import streamlit as st
import matplotlib.pyplot as plt
import numpy as np
from collections import deque

# Warehouse grid: 0=open, 1=wall
warehouse = [
    [0, 0, 0, 0, 0],
    [1, 1, 1, 1, 0],
    [0, 0, 0, 1, 0],
    [0, 1, 0, 0, 0],
    [0, 1, 1, 1, 0]
]

ROWS = len(warehouse)
COLS = len(warehouse[0])

start = (0, 0)
goal = (4, 4)

def get_neighbors(pos):
    x, y = pos
    directions = [(-1,0), (1,0), (0,-1), (0,1)]
    neighbors = []
    for dx, dy in directions:
        nx, ny = x + dx, y + dy
        if 0 <= nx < ROWS and 0 <= ny < COLS and warehouse[nx][ny] == 0:
            neighbors.append((nx, ny))
    return neighbors

def bfs(start, goal):
    queue = deque([start])
    visited = set([start])
    parent = {start: None}

    while queue:
        current = queue.popleft()
        if current == goal:
            break
        for neighbor in get_neighbors(current):
            if neighbor not in visited:
                visited.add(neighbor)
                parent[neighbor] = current
                queue.append(neighbor)

    path = []
    current = goal
    while current and current != start:
        path.append(current)
        current = parent.get(current)
    if current == start:
        path.append(start)
        path.reverse()
        return path
    return []

def draw_grid(path=None):
    fig, ax = plt.subplots(figsize=(5, 5))
    grid = np.array(warehouse)
    cmap = plt.cm.get_cmap('Greys')

    # Draw grid
    ax.imshow(grid, cmap=cmap, origin='upper')

    # Draw cells
    for r in range(ROWS):
        for c in range(COLS):
            if (r, c) == start:
                ax.text(c, r, 'S', va='center', ha='center', color='green', fontsize=12, fontweight='bold')
            elif (r, c) == goal:
                ax.text(c, r, 'G', va='center', ha='center', color='red', fontsize=12, fontweight='bold')

    # Draw path
    if path:
        for (r, c) in path:
            if (r, c) != start and (r, c) != goal:
                ax.plot(c, r, 's', color='blue', markersize=20)

    ax.set_xticks(np.arange(-0.5, COLS, 1), minor=True)
    ax.set_yticks(np.arange(-0.5, ROWS, 1), minor=True)
    ax.grid(which='minor', color='black', linestyle='-', linewidth=1)
    ax.set_xticks([])
    ax.set_yticks([])
    st.pyplot(fig)

# Streamlit App
st.title("Warehouse BFS Pathfinding (Streamlit Version)")

if st.button("Start BFS"):
    path = bfs(start, goal)
    if path:
        st.success("Path found!")
    else:
        st.error("No path found.")
    draw_grid(path)
else:
    draw_grid()